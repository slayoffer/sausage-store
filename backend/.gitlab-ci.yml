variables:
  VERSION: 1.0.${CI_PIPELINE_ID}
  MAVEN_REPO_PATH: ${CI_PROJECT_DIR}/.m2/repository
  JAVA_OPTS: -XX:MaxRAMPercentage=90 # для того, чтобы Maven не съел всю свободную оперативку

include:
  - local: backend/ci-conf/*.yaml
  - template: Security/SAST.gitlab-ci.yml
  - project: 'templates/ci'
    file: 'DockerInDockerTemplate.yml'

stages:
  - cache
  - build
  - test
  - release
  - notify
  - deploy

make-cache:
  stage: cache
  image:
    name: gitlab.praktikum-services.ru:5050/std-012-042/sausage-store/maven:3.8.2-openjdk-16-slim
  cache:
    key: backend-cache-${CI_COMMIT_REF_SLUG}
    paths:
      - ${CI_PROJECT_DIR}/.m2/repository
      - ${CI_PROJECT_DIR}/backend/target
  script:
    - cd backend
    - mvn package -Dversion.application=${VERSION} -Dmaven.repo.local=${MAVEN_REPO_PATH}

build-backend:
  stage: build
  cache:
    key: backend-cache-${CI_COMMIT_REF_SLUG}
    paths:
      - ${CI_PROJECT_DIR}/.m2/repository
    policy: pull
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/backend"
      --build-arg VERSION=$VERSION
      --cache
      --dockerfile "${CI_PROJECT_DIR}/backend/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}/sausage-backend:${VERSION}"
  rules:
    - changes:
      - backend/**/*

postman api testing:
  stage: test
  variables:
    DOCKER_HOST: tcp://docker:2376
    DOCKER_TLS_CERTDIR: "/certs"
    DOCKER_TLS_VERIFY: "true"
    DOCKER_CERT_PATH: "$DOCKER_TLS_CERTDIR/client"
  image: 
    name: postman/newman
    entrypoint: [""]
  services: 
    - name: ${CI_REGISTRY_IMAGE}/sausage-backend:${VERSION}
      alias: backend
  script:
    - sleep 30
    - newman run backend/collection.json

upload-backend-latest:
  variables:
    GIT_STRATEGY: none
  image: docker:20.10.12-dind-rootless
  stage: release
  before_script:
    - until docker info; do sleep 1; done
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
  script:
    - docker pull $CI_REGISTRY_IMAGE/sausage-backend:$VERSION
    # если образ прошел проверки в CI (сканирование, тесты и т.д), то тегаем latest
    - docker tag $CI_REGISTRY_IMAGE/sausage-backend:$VERSION $CI_REGISTRY_IMAGE/sausage-backend:latest
    - docker push $CI_REGISTRY_IMAGE/sausage-backend:latest
  rules:
    - changes:
      - backend/**/*

deploy-backend:
  stage: deploy
  variables:
    DOCKER_TAG: 1.0.$CI_PIPELINE_ID
    SAUSAGE: backend
  trigger:
    project: std-012-042/infrastructure
    branch: main
    strategy: depend


