variables:
  VERSION: 1.0.${CI_PIPELINE_ID}

include:
  - local: frontend/ci-conf/*.yaml
  - template: Security/SAST.gitlab-ci.yml
  - project: 'templates/ci'
    file: 'DockerInDockerTemplate.yml'

stages:
  - build
  - test
  - release
  - notify
  - deploy

build-frontend:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/frontend"
      --cache
      --dockerfile "${CI_PROJECT_DIR}/frontend/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}/sausage-frontend:${VERSION}"
  rules:
    - changes:
      - frontend/**/*

upload-frontend-latest:
  variables:
    GIT_STRATEGY: none
  image: docker:20.10.12-dind-rootless
  stage: release
  before_script:
    - until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE/sausage-frontend:$VERSION
    # если образ прошел проверки в CI (сканирование, тесты и т.д), то тегаем latest
    - docker tag $CI_REGISTRY_IMAGE/sausage-frontend:$VERSION $CI_REGISTRY_IMAGE/sausage-frontend:latest
    - docker push $CI_REGISTRY_IMAGE/sausage-frontend:latest
  rules: # rules и only в данных случаях взаимозаменяемы.
    - changes:
      - frontend/**/*

deploy-frontend:
  stage: deploy
  variables:
    DOCKER_TAG: 1.0.$CI_PIPELINE_ID
    SAUSAGE: frontend
  trigger:
    project: std-012-042/infrastructure
    branch: main
    strategy: depend
